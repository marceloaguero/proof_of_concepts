name: Push into main branch

on:
  push:
    branches:
      - main

env:
  GOTOOLCHAIN: local

jobs:
  # Asume that all tests passed during pull request phase
  build_push_deploy:
    env:
      REGION: us-east1
      REGISTRY: us-east1-docker.pkg.dev
      REPOSITORY: poc
      IMAGE_BASE_NAME: hello

    name: Build Docker image, push into Registry, deploy in Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Using some data from github repo, build the docker image name (and tag)
      # Also, build Cloud Run service name
      # Put both names in the Action environment
      - name: Set up docker image tag
        run: |
          COMMIT_NUMBER=$(git rev-list --count HEAD)
          COMMIT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%s)

          IMAGE_TAG_SUFFIX="${COMMIT_NUMBER}"

          echo "SERVICE_NAME=qa-${{ env.IMAGE_BASE_NAME }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_BASE_NAME }}:qa-${IMAGE_TAG_SUFFIX}" >> $GITHUB_ENV

      # Login into docker images registry. In our case, Google Artifact Registry
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      # Then build docker image and push into registry
      - name: Build and push docker image
        uses: docker/build-push-action@v5.4.0
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}

      # Deploy the created image to Cloud Run
      - name: Deploy into Google Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          region: ${{ env.REGION }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.IMAGE_NAME }}
          flags: '--allow-unauthenticated'

      - name: Show Cloud Run URL
        run: |
          echo "URL: ${{ steps.deploy.outputs.url }}"

      - name: Get Source Branch
        run: |
          MERGE_COMMIT=$(git rev-parse HEAD)
          SOURCE_BRANCH=$(git log --merges --pretty=format:"%P" -n 1 $MERGE_COMMIT | awk '{print $2}')
          echo "Merge Commit: $MERGE_COMMIT"
          echo "Parent Commit (Source Branch Head): $SOURCE_BRANCH"
          
          # Try to find branch name from refs
          BRANCH_NAME=$(git branch -r --contains $SOURCE_BRANCH | grep -v main | head -n 1 | sed 's/origin\///')
          echo "SOURCE_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Show Detected Source Branch
        run: |
          echo "Merged from branch: $SOURCE_BRANCH"
